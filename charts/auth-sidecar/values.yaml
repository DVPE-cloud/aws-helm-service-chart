#####################
### Auth Service Part
#####################

auth_service:
  image:
    repository: localhost:5000
    name: auth-sidecar
    pullPolicy: IfNotPresent
    version: "latest"

  service:
    type: ClusterIP
    port: 8443

  ingress:
    hostname: auth-sidecar.test.local
    path: /

oauth2:
  secret:
    # Client ID
    OIDC_CLIENT_ID: ""
  config:
    # Name
    SERVICE_NAME: ""
    # Version
    SERVICE_VERSION: ""
    # Internal-Registry-IP
    OS_INTERNAL_REGISTRY_NAME: "docker-registry.default.svc:5000"
    # Auto Config URL for OIDC Provider
    OIDC_DISCOVERY_URL: ""
    # Redirect URL
    OIDC_REDIRECT_URI: "https://127.0.0.1:8443/callback"
    # OAuth Scopes
    OIDC_SCOPE: "openid"
    # Oauth token endpoint authentication method
    OIDC_TOKEN_ENDPOINT_AUTH_METHOD: "client_secret_basic"
    # Wether to verify the SSL connection to OIDC Provider
    OIDC_SSL_VERIFY: "no"
    # TTL of accesstoken in seconds
    OIDC_TOKEN_EXPIRY_TIME: "7200"
    # Whether to renew the access token once it has expired
    OIDC_RENEW_ACCESS_TOKEN: "true"
    # Name of the actual service behind this auth sidcar within the same pod
    TARGET_HOST: "http://target-service.test.local"
    # Port of the actual service behind this auth sidcar within the same pod
    TARGET_PORT: "80"
    # Log level of the nginx
    LOG_LEVEL: "info"
    # Authentication Type
    AUTH_TYPE: "UI"

################
### Service Part
################

target_service:
  name: "nginx-frontend"
  image:
    repository: localhost:5000
    name: "nginx"
    version: "alpine"
  service:
    type: ClusterIP
    port: 80
  volumes:
    - /opt/auth-sidecar/local/nginx_local_test.conf:/etc/nginx/nginx.conf
  ingress:
    hostname: target-service.test.local
    path: /

###########
### GENERIC
###########

replicaCount: 1

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceName: "nginx"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
