apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service.name" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ include "service.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "service.name" . }}
      annotations:
        ad.datadoghq.com/{{ include "service.name" . }}.check_names: '["{{ include "service.name" . }}"]'
        ad.datadoghq.com/{{ include "service.name" . }}.logs: '[{"source":"{{ .Values.datadog.source }}", "service":"{{ include "service.name" . }}"}]'
        ad.datadoghq.com/{{ include "service.name" . }}.tags: '{"team": "DVPE", "exampleTag": "exampleTag"}'
    spec:
      imagePullSecrets:
        - name: aws-ecr-secret
      containers:
        - name: {{ include "service.name" . }}
          image: {{ include "image.url" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.project.includeAwsCredentials }}
            - name: AWS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "service.name" . }}-secret
                  key: aws.accesskey
            - name: AWS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "service.name" . }}-secret
                  key: aws.secretkey
            {{- end}}
          readinessProbe:
            httpGet:
              path: {{ .Values.containers.readinessProbe.httpGet.path }}
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
          ports:
            - containerPort: {{ .Values.connection.http.port }}
              name: http
              protocol: TCP
