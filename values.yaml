# Values for default microservice projects

#----------------#
# OAuth2 Sidecar #
#----------------#

oauth2:
  enabled: false
  sidecar:
    image:
      repository: "localhost:5000"
      name: "auth-sidecar"
      tag: "latest"
      pullPolicy: "Always"
    servicePort: 8443
    config:
      # Auto Config URL for OIDC Provider
      discoveryUrl: ""
      # Redirect URL
      redirectUrl: "https://127.0.0.1:8443/callback"
      # OAuth Scopes
      scope: "openid"
      # Oauth token endpoint authentication method
      tokenEndpointAuthMethod: "client_secret_basic"
      # Wether to verify the SSL connection to OIDC Provider
      sslVerify: "no"
      # TTL of accesstoken in seconds
      tokenExpiryTime: "7200"
      # Whether to renew the access token once it has expired
      renewAccessToken: "true"
      # Name of the actual service behind this auth sidcar within the same pod
      targetHost: "http://127.0.0.1"
      # Port of the actual service behind this auth sidcar within the same pod
      targetPort: "8080"
      # Log level of the nginx
      logLevel: "info"
      # Authentication Type (UI/BACKEND)
      authType: "UI"
    secret:
      # All necessary sidecar credentials as one object
      key:
  cache:
    # Set Session Cache Storage (cookie/redis)
    type: "cookie"
    # Session Storage Hostname/IP Address, reachable service inside Kubernetes
    host: ""
    # Port from Session Storage Server/Service
    port: ""
    # Time To Live for the Redis Key Expire
    ttl: "7200"

project:
  includeAwsCredentials: false

#-------------------------------#
# deployment.yaml value section #
#-------------------------------#

deployment:
  spec:
    replicas: 2
    serviceAccountName: default
    image:
      repository:
      tag: latest
      pullPolicy: Always
    connection:
      http:
        port: 8080
    resources:
      limits:
        cpu: 200m
        memory: 235M
      requests:
        cpu: 150m
        memory: 200M
    containers:
      readinessProbe:
        httpGet:
          path:

#--------------------------------#
# autoscaling.yaml value section #
#--------------------------------#

autoscaling:
  minReplicas: 2
  maxReplicas: 5
  metrics:
    resource:
      cpu:
        targetAverageUtilization: 80
      #memory:
      #  targetAverageUtilization: 90
        #targetAverageValue: 200Mi

#----------------------------#
# ingress.yaml value section #
#----------------------------#

ingress:
  ext:
    enabled: false
    annotations:
      ssl:
        redirect: false
        ciphers: ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
    class: ingress-extranet
    path: /
    host:
    servicePort: 8080
  int:
    enabled: false
    annotations:
        ssl:
          redirect: false
          ciphers: ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
    class: ingress-intranet
    path: /
    host:
    servicePort: 8080

#-------------------------------#
# service.yaml value section    #
#-------------------------------#

service:
  spec:
    type: ClusterIP
    ports:
      http: 8080
      targetPort: 8080

#-------------------------------#
# secret.yaml value section     #
#-------------------------------#

externalSecret:
  service:
    credentials:
      key:

#-------------------------------------#
# tls.yaml/ingress.yaml value section #
#-------------------------------------#
tls:
  issuer:
    name: letsencrypt-staging
    spec:
      acme:
        email:
  cert:
    ext:
      secret:
        name: service-cert-tls
    int:
      secret:
        name: internal-wildcard-tls-secret
        value: tls.cert.int.secret

#-------------------------------------#
# DataDog value section #
#-------------------------------------#
datadog:
  enabled: false
  source:
    service:
    sidecar: nginx

#-------------------------------------#
# Extension param value section       #
#-------------------------------------#
additionalparameters:
  configMapApplied: false
  secretsApplied: false
  yamlConfigFileApplied: false
  config:
    PLACEHOLDER: "placeholder"
  secrets:
    PLACEHOLDER: "placeholder"
  yamlConfigFile:
    configFileProp:
      sub:
        value
    anotherConfigFileProp: 1
